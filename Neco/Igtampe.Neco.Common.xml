<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Igtampe.Neco.Common</name>
    </assembly>
    <members>
        <member name="T:Igtampe.Neco.Common.Bank">
            <summary> A Neco Bank</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Bank.ID">
            <summary>ID of this bank (Short name)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Bank.Name">
            <summary>Long Name of this bank</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Bank.Accounts">
            <summary>Accounts in this bank</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Bank.AccountTypes">
            <summary>Bank Account types available in this bank</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.Bank.Equals(System.Object)">
            <summary>Compares this Bank to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a Bank and the <see cref="P:Igtampe.Neco.Common.Bank.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Bank.GetHashCode">
            <summary>Gets a hash code for this Bank. Delegates to <see cref="P:Igtampe.Neco.Common.Bank.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Bank.ToString">
            <summary>Creates a string representation of this Bank</summary>
            <returns>{Id} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.BankAccount">
            <summary>Holds the basic information of a bank account, including a shorthand ID </summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccount.ID">
            <summary>Shorthand ID of this bank account</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccount.Bank">
            <summary>Bank this bank account belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccount.Details">
            <summary>Details of this bank account</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccount.Type">
            <summary>Bank Account type of this bank account</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccount.Owner">
            <summary>Owner of this bank account</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccount.Closed">
            <summary>Indicates whether this bank account is closed or not</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccount.Equals(System.Object)">
            <summary>Compares this BankAccount item to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a BankAccount item and the <see cref="P:Igtampe.Neco.Common.BankAccount.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccount.GetHashCode">
            <summary>Gets a hash code for this BankAccount item. Delegates to <see cref="P:Igtampe.Neco.Common.BankAccount.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccount.ToString">
            <summary>Creates a string representation of this BankAccount item</summary>
            <returns>{ID} : {Owner?.Name}'s bank Account in {Bank?.Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.BankAccountDetail">
            <summary>Holds NECO Bank account details that are confidential</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccountDetail.ID">
            <summary>ID of this bank account</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccountDetail.Balance">
            <summary>Balance in this bank account</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccountDetail.IsOverdrafted">
            <summary>Boolean to check if this bank account is overdrafted</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccountDetail.Equals(System.Object)">
            <summary>Compares this BankAccountDetails item to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a BankAccountDetails item and the <see cref="P:Igtampe.Neco.Common.BankAccountDetail.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccountDetail.GetHashCode">
            <summary>Gets a hash code for this BankAccountDetails item. Delegates to <see cref="P:Igtampe.Neco.Common.BankAccountDetail.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccountDetail.ToString">
            <summary>Creates a string representation of this BankAccountDetails item</summary>
            <returns>{Id} : Account with balance {Balance:N0}p</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.BankAccountType">
            <summary>Defines a type of available bank account</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccountType.ID">
            <summary>ID of this bank account type</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccountType.Name">
            <summary>Name of this bank account type (IE UMSNB Savings)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccountType.Bank">
            <summary>Bank this type belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.BankAccountType.InterestRate">
            <summary>Interest rate of this bank account type</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccountType.Equals(System.Object)">
            <summary>Compares this Bank Account type item to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a BankAccountType item and the <see cref="P:Igtampe.Neco.Common.BankAccountType.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccountType.GetHashCode">
            <summary>Gets a hash code for this BankAccountType item. Delegates to <see cref="P:Igtampe.Neco.Common.BankAccountType.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.BankAccountType.ToString">
            <summary>Creates a string representation of this BankAccountType item</summary>
            <returns>{Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.CertifiedItem">
            <summary>Item in the Certification ledger for NECO</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CertifiedItem.ID">
            <summary>ID of this certified item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CertifiedItem.Text">
            <summary>Human readable text in case the object fails to load</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CertifiedItem.CertifiedBy">
            <summary>User that certified this item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CertifiedItem.Date">
            <summary>Date and time at which this was certified</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.CertifiedItem.Equals(System.Object)">
            <summary>Compares this Certified item to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a certified item and the <see cref="P:Igtampe.Neco.Common.CertifiedItem.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.CertifiedItem.GetHashCode">
            <summary>Gets a hash code for this Certified item. Delegates to <see cref="P:Igtampe.Neco.Common.CertifiedItem.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.CertifiedItem.ToString">
            <summary>Creates a string representation of this certified item</summary>
            <returns>{Id} : [{Date}] {Text}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.CheckbookItem">
            <summary>Holds a Checkbook 2000 Item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CheckbookItem.ID">
            <summary>ID of this item</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.CheckbookItem.ItemType">
            <summary>Available type of checkbook items</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.CheckbookItem.ItemType.BILL">
            <summary>Item is a bill and must be approved by the Origin</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.CheckbookItem.ItemType.CHECK">
            <summary>Item is a check and must be approved by the destination</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CheckbookItem.AttachedTransaciton">
            <summary>Attatched transaction to this checkbook item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CheckbookItem.Type">
            <summary>Type of transaction held in this Checkbook Item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CheckbookItem.Variant">
            <summary>Graphical Variant of the given Checkbook item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.CheckbookItem.Comment">
            <summary>Comment provided for this checkbook item</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.CheckbookItem.Equals(System.Object)">
            <summary>Compares this Checkbook item to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a checkbook item and the <see cref="P:Igtampe.Neco.Common.CheckbookItem.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.CheckbookItem.GetHashCode">
            <summary>Gets a hash code for this Checkbook item. Delegates to <see cref="P:Igtampe.Neco.Common.CheckbookItem.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.CheckbookItem.ToString">
            <summary>Creates a string representation of this checkbook item</summary>
            <returns>{Id} : {AttachedTransaciton}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.Contractus.ContractStatus">
            <summary>Status of a given contract</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.Contractus.ContractStatus.AUCTION">
            <summary>Contract is currently up for auction</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.Contractus.ContractStatus.AWARDED">
            <summary>Contract has been awarded and is currently being worked on</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.Contractus.ContractStatus.PENDING_PAYMENT">
            <summary>Contract is completed and is pending payment</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.Contractus.ContractStatus.COMPELTED">
            <summary>Contract has been paid and is complete</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.Contractus.ContractStatus.CANCELLED">
            <summary>Contract was cancelled</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Contractus.Contract">
            <summary>Holds a Contractus Contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Contract.ID">
            <summary>ID Of this contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Contract.Name">
            <summary>Name of this contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Contract.Description">
            <summary>Description of this contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Contract.FromUser">
            <summary>User who's posted this contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Contract.TopBidder">
            <summary>Top Bidder for this contract </summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Contract.Amount">
            <summary>Amount bidded by the <see cref="P:Igtampe.Neco.Common.Contractus.Contract.TopBidder"/></summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Contract.Status">
            <summary>Current status of this contract</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.Contractus.Contract.Equals(System.Object)">
            <summary>Compares this Contract to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a Contract and the <see cref="P:Igtampe.Neco.Common.Contractus.Contract.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Contractus.Contract.GetHashCode">
            <summary>Gets a hash code for this Contract. Delegates to <see cref="P:Igtampe.Neco.Common.Contractus.Contract.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Contractus.Contract.ToString">
            <summary>Creates a string representation of this Contract</summary>
            <returns>"ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.Contractus.Requests.AddBidRequest">
            <summary>Request to add a bid to a given contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.AddBidRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.AddBidRequest.ContractID">
            <summary>ID of the contract this request is for</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.AddBidRequest.Bid">
            <summary>New Bid to post for this contract</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Contractus.Requests.ChangeContractStatusRequest">
            <summary>Request to change a given contract's status</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.ChangeContractStatusRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.ChangeContractStatusRequest.ContractID">
            <summary>ID of the contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.ChangeContractStatusRequest.NewStatus">
            <summary>State to which to change the contract to</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Contractus.Requests.NewContractRequest">
            <summary>Request to create and post a new contract</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.NewContractRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.NewContractRequest.Name">
            <summary>Name of the contract to be created</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Contractus.Requests.NewContractRequest.Description">
            <summary>Description of the contract to be created</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.IncomeItem">
            <summary>Holds an EzTax income item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.ID">
            <summary>ID of this income item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.Name">
            <summary>Name of this IncomeItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.User">
            <summary>User this income item belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.Subitems">
            <summary>Subitems in this Item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.Apartments">
            <summary>Apartments in this IncomeItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.Businesses">
            <summary>Businesses in this IncomeItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.Hotels">
            <summary>Hotels in this IncomeItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.MiscIncome">
            <summary>Other miscellaneous income in this income item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.LocalJurisdiction">
            <summary>Local Jurisdiction of this IncomeItem (IE: Newpond)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.IncomeItem.FederalJurisdiction">
            <summary>Federal Jurisdiction of this IncomeItem (IE: UMS)</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.IncomeItem.TotalMonthlyIncome">
            <summary>Returns the sum of all incomes from subitems contained in this item, and miscincome</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.IncomeItem.Equals(System.Object)">
            <summary>Compares this IncomeItem to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a IncomeItem and the <see cref="P:Igtampe.Neco.Common.EzTax.IncomeItem.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.IncomeItem.GetHashCode">
            <summary>Gets a hash code for this IncomeItem. Delegates to <see cref="P:Igtampe.Neco.Common.EzTax.IncomeItem.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.IncomeItem.ToString">
            <summary>Creates a string representation of this IncoemItem</summary>
            <returns>{ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.Requests.IncomeItemRequest">
            <summary>Request to create or modify an incomeitem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Requests.IncomeItemRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Requests.IncomeItemRequest.Item">
            <summary>Item to modify or create</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.Subitems.Apartment">
            <summary>Subitem that holds data for an appartment complex</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.ID">
            <summary>ID of this subitem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.IncomeItem">
            <summary>IncomeItem this Subitem belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.Name">
            <summary>Name of this IncomeSubItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.SUnits">
            <summary>Studio units in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.B1Units">
            <summary>1 Bedroom units in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.B2Units">
            <summary>2 Bedroom units in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.B3Units">
            <summary>3 Bedroom units in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.PUnits">
            <summary>Penthouse units in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.SRent">
            <summary>Studio monthly rent in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.B1Rent">
            <summary>1 Bedroom monthly rent in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.B2Rent">
            <summary>2 Bedroom monthly rent in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.B3Rent">
            <summary>3 Bedroom monthly rent in this appartment</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Apartment.PRent">
            <summary>Penthouse rent in this appartment</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.Apartment.Income">
            <summary>Income of this appartment</summary>
            <returns>(SRent * SUnits) + (B1Rent * B1Units) + (B2Rent * B2Units) + (B3Rent * B3Units) + (PRent * PUnits)</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.Subitems.Business">
            <summary>Business subitem that contains details for a business of some kind (Restaurant or store)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Business.ID">
            <summary>ID of this subitem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Business.IncomeItem">
            <summary>IncomeItem this Subitem belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Business.Name">
            <summary>Name of this IncomeSubItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Business.Chairs">
            <summary>Chairs in this business. 1 if the business is a store</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Business.AvgSpend">
            <summary>Average spending of a customer in this business</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Business.CustPerHour">
            <summary>Average customers per hour in this business</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Business.HoursOpen">
            <summary>Hours this business is open a day (should be between 0 and 24)</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.Business.Income">
            <summary>Income of this business. Assumes 50% Proffit</summary>
            <returns>(((AvgSpend / 2) * CustPerHour * HoursOpen) * Chairs) * 30</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.Subitems.Hotel">
            <summary>Subitem that can hold breakdown of items for a hotel with suites and rooms</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.ID">
            <summary>ID of this subitem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.IncomeItem">
            <summary>IncomeItem this Subitem belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.Name">
            <summary>Name of this IncomeSubItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.Rooms">
            <summary>Number of rooms in this hotel</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.Suites">
            <summary>Number of suites in this hotel</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.RoomRate">
            <summary>Nightly rate of a room in this hotel</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.SuiteRate">
            <summary>Nightly rate of a suite at this hotel</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.Hotel.MiscIncome">
            <summary>Misc monthly income for this hotel</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.Hotel.Income">
            <summary>Income of this hotel. Assumes 50% Profit</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.Hotel.RateToMonthlyIncome(System.Int32)">
            <summary>Converts a nightly rate to monthly income. Assumes 50% profit</summary>
            <param name="Rate"></param>
            <returns></returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem">
            <summary>Income subitem for an IncomeItem </summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.ID">
            <summary>ID of this subitem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.IncomeItem">
            <summary>IncomeItem this Subitem belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.Name">
            <summary>Name of this IncomeSubItem</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.Income">
            <summary>Gets this item's income</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.Equals(System.Object)">
            <summary>Compares this IncomeSubItem to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is the same type of incomesubitem and the <see cref="P:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.GetHashCode">
            <summary>Gets a hash code for this IncomeSubeItem. Delegates to <see cref="P:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.Subitems.IncomeSubitem.ToString">
            <summary>Creates a string representation of this IncomeSubItem</summary>
            <returns>"ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.TaxBracket">
            <summary>Tax Bracket for a <see cref="T:Igtampe.Neco.Common.EzTax.TaxJurisdiction"/></summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxBracket.ID">
            <summary>ID of this Bracket</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxBracket.Jurisdiction">
            <summary>Jurisdiction this tax bracket belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxBracket.Name">
            <summary>Name of this tax bracket</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxBracket.Start">
            <summary>Income amount at which this bracket begins (Inclusive)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxBracket.End">
            <summary>Income amount at which this bracket ends (Exclusive)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxBracket.Type">
            <summary><see cref="T:Igtampe.Neco.Common.UserType"/> This bracket belongs to (IE Corporate)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxBracket.Rate">
            <summary>Rate of this Tax Bracket</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxBracket.Equals(System.Object)">
            <summary>Compares this TaxBracket to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a TaxBracket and the <see cref="P:Igtampe.Neco.Common.EzTax.TaxBracket.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxBracket.GetHashCode">
            <summary>Gets a hash code for this TaxBracket. Delegates to <see cref="P:Igtampe.Neco.Common.EzTax.TaxBracket.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxBracket.ToString">
            <summary>Creates a string representation of this TaxBracket</summary>
            <returns>{ID} : {Name}, From {Start} to {End} at {Rate}%</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.TaxJurisdiction">
            <summary>Holds a Jurisdiction that can tax a Neco user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxJurisdiction.ID">
            <summary>ID of this jurisdiction</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxJurisdiction.Name">
            <summary>Name of this jurisdiction</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxJurisdiction.Brackets">
            <summary>Brackets in this Jurisdiction</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxJurisdiction.Account">
            <summary>Account to which taxes must be paid out to</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxJurisdiction.CalculateTax(Igtampe.Neco.Common.User,System.Int64)">
            <summary>Calculates tax on User U with income I in this jurisdiction</summary>
            <param name="U"></param>
            <param name="I"></param>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxJurisdiction.Equals(System.Object)">
            <summary>Compares this TaxJurisdiction to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a TaxJurisdiction and the <see cref="P:Igtampe.Neco.Common.EzTax.TaxJurisdiction.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxJurisdiction.GetHashCode">
            <summary>Gets a hash code for this TaxJurisdiction. Delegates to <see cref="P:Igtampe.Neco.Common.EzTax.TaxJurisdiction.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxJurisdiction.ToString">
            <summary>Creates a string representation of this TaxJurisdiction</summary>
            <returns>{ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.TaxReport">
            <summary>Holds a Tax Report </summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.ID">
            <summary>ID of this Tax Report</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.Owner">
            <summary>User this Report belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.PreparedDate">
            <summary>Date at which this tax report was prepared</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.StaticIncome">
            <summary>Amount of static income (income from <see cref="T:Igtampe.Neco.Common.EzTax.IncomeItem"/>s) in the report.</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.ExtraIncome">
            <summary>Amount of Extra Income (income from <see cref="T:Igtampe.Neco.Common.Transaction"/>s) in the report.</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.ExtraIncomeTaxable">
            <summary>Portion of <see cref="P:Igtampe.Neco.Common.EzTax.TaxReport.ExtraIncome"/> that's Taxable</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.GrandTotalIncome">
            <summary>Grand total of Income during this period</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.GrandTotalTax">
            <summary>Grand total of tax during this period</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.Report">
            <summary>Actual Tax Report Text</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.CSVReport">
            <summary>Tax Report text presented in CSV format for exporting</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.PaymentBreakdownDictionary">
            <summary>Dictionary of Tax Payment Breakdown</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxReport.IncomeBreakdownDictionary">
            <summary>Dictionary of Income Breakdown</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxReport.GenerateTaxReport(Igtampe.Neco.Common.User,System.Collections.Generic.ICollection{Igtampe.Neco.Common.EzTax.IncomeItem},System.Collections.Generic.ICollection{Igtampe.Neco.Common.Transaction},Igtampe.Neco.Common.EzTax.TaxJurisdiction)">
            <summary>Generates a Tax Report object based on a User's income items and monthly transactions</summary>
            <param name="User"></param>
            <param name="IncomeItems"></param>
            <param name="CurrentMonthTransactions"></param>
            <returns></returns>
        </member>
        <member name="T:Igtampe.Neco.Common.EzTax.TaxUserInfo">
            <summary>EZTax User Info, designed to be used by the frontend</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.EzTax.TaxUserInfo.Items">
            <summary>Items from this user</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.EzTax.TaxUserInfo.TotalMonthlyIncome">
            <summary>Calculates this user's Total Monthly Income</summary>
            <returns></returns>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.Country">
            <summary>Country for LandView, which holds <see cref="T:Igtampe.Neco.Common.LandView.District"/>s</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.ID">
            <summary>ID of this country</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.Name">
            <summary>Name of this country</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.Districts">
            <summary>Districts in this country</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.Roads">
            <summary>Roads in this country</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.Width">
            <summary>Width of this country in meters</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.Height">
            <summary>Height of this country in meters</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.PricePerSquareMeter">
            <summary>Price per square meter of unclaimed terrain</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Country.FederalBankAccount">
            <summary>Neco User to direct payments of land to and handle accepting taxes</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Country.Area">
            <summary>Area of this country in square meters</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Country.Igtampe#Neco#Common#LandView#ILandViewItem#Height">
            <summary>Height of this country in meters</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Country.Igtampe#Neco#Common#LandView#ILandViewItem#Width">
            <summary>Width of this country in meters</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Country.Equals(System.Object)">
            <summary>Compares this Country to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a Country and the <see cref="P:Igtampe.Neco.Common.LandView.Country.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Country.GetHashCode">
            <summary>Gets a hash code for this Country. Delegates to <see cref="P:Igtampe.Neco.Common.LandView.Country.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Country.ToString">
            <summary>Creates a string representation of this Country</summary>
            <returns>{ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.District">
            <summary>Districts in landview held in a <see cref="P:Igtampe.Neco.Common.LandView.District.Country"/>, that holds <see cref="T:Igtampe.Neco.Common.LandView.Plot"/>s</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.ID">
            <summary>ID of this </summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.Name">
            <summary>Name of this District</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.Country">
            <summary>Country this district belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.Points">
            <summary>comma separated point strings for storage</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.GraphicalPoints">
            <summary>Graphical points that define the corners of this district</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.Plots">
            <summary>Collection of plots that are in this district</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.PricePerSquareMeter">
            <summary>Price per square meter of unclaimed terrain</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.District.DistrictBankAccount">
            <summary>Bank account of this district to handle accepting taxes and accept land payments</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.District.Area">
            <summary>Area of this District</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.District.Height">
            <summary>Height of this district</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.District.Width">
            <summary>Width of this district</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.District.Equals(System.Object)">
            <summary>Compares this District to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a District and the <see cref="P:Igtampe.Neco.Common.LandView.District.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.District.GetHashCode">
            <summary>Gets a hash code for this District. Delegates to <see cref="P:Igtampe.Neco.Common.LandView.District.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.District.ToString">
            <summary>Creates a string representation of this District</summary>
            <returns>{ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.ILandViewItem">
            <summary>Interface that defines LandViewItems that are drawable on screen</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.ILandViewItem.Width">
            <summary>Width of this item</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.ILandViewItem.Height">
            <summary>Height of this item</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.ILandViewItem.Area">
            <summary>Area of this item</summary>
            <returns></returns>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.PlotStatus">
            <summary>Status of a Plot</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.LandView.PlotStatus.FOR_SALE">
            <summary>Plot that is for sale by <see cref="!:Owner"/></summary>
        </member>
        <member name="F:Igtampe.Neco.Common.LandView.PlotStatus.NOT_FOR_SALE">
            <summary>Plot that is owned and is not for  sale</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.LandView.PlotStatus.BUILT">
            <summary>Plot that has been built upon and can no longer be resold</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.Plot">
            <summary>A plot of land located in a <see cref="P:Igtampe.Neco.Common.LandView.Plot.District"/></summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Plot.ID">
            <summary>ID of this plot</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Plot.District">
            <summary>District this Plot belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Plot.Points">
            <summary>comma separated point strings for storage</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Plot.GraphicalPoints">
            <summary>Graphical points that define the corners of this district</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Plot.Owner">
            <summary>Owner of this plot</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Plot.Name">
            <summary>Name of this plot</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Plot.Status">
            <summary>Status of this plot</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Plot.Area">
            <summary>Area of this plot in square meters</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Plot.Height">
            <summary>Height of this plot in meters</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Plot.Width">
            <summary>Width of this plot in meters</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Plot.Equals(System.Object)">
            <summary>Compares this Plot to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a Plot and the <see cref="P:Igtampe.Neco.Common.LandView.Plot.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Plot.GetHashCode">
            <summary>Gets a hash code for this Plot. Delegates to <see cref="P:Igtampe.Neco.Common.LandView.Plot.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Plot.ToString">
            <summary>Creates a string representation of this Plot</summary>
            <returns>{ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.Requests.ChangePlotStatusRequest">
            <summary>Request to change a plot's current status</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.ChangePlotStatusRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.ChangePlotStatusRequest.PlotID">
            <summary>ID of the plot to change status of</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.ChangePlotStatusRequest.NewStatus">
            <summary>Status to change the plot's status to</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.Requests.CreatePlotRequest">
            <summary>Request to create a plot on the Landview system</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.CreatePlotRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.CreatePlotRequest.DefiningPoints">
            <summary>Points that define the area of the plot</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.CreatePlotRequest.BankAccountID">
            <summary>Bank Account this plot will be bought with</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.Requests.TransferPlotOwnershipRequest">
            <summary>Request to transfer plot ownership</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.TransferPlotOwnershipRequest.SessionID">
            <summary>ID of the Session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.TransferPlotOwnershipRequest.PlotID">
            <summary>ID of the plot to transfer ownership</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Requests.TransferPlotOwnershipRequest.NewOwnerID">
            <summary>User ID which will be the new owner of this plot after the transfer</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.LandView.Road">
            <summary>Holds a road to display on a LandView map</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Road.ID">
            <summary>ID of this road</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Road.Name">
            <summary>Name of this road</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Road.Points">
            <summary>comma separated point strings for storage</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Road.GraphicalPoints">
            <summary>Graphical points that define beginning, turns, and end of this road</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.LandView.Road.Country">
            <summary>Country this Road belongs to</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Road.Equals(System.Object)">
            <summary>Compares this Road to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a Road and the <see cref="P:Igtampe.Neco.Common.LandView.Road.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Road.GetHashCode">
            <summary>Gets a hash code for this Road. Delegates to <see cref="P:Igtampe.Neco.Common.LandView.Road.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.LandView.Road.ToString">
            <summary>Creates a string representation of this Road</summary>
            <returns>{ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.Notification">
            <summary>Holds a notification for a User</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Notification.ID">
            <summary>ID of this notification</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Notification.Text">
            <summary>Text contained in this notification</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Notification.Time">
            <summary>Time at which this notification occurred</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Notification.User">
            <summary>User this notification belongs to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Notification.Read">
            <summary>Whether or not a user has seen this notification or not</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.Notification.Equals(System.Object)">
            <summary>Compares this notification to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if other object is a notification and its <see cref="P:Igtampe.Neco.Common.Notification.ID"/> matches</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Notification.GetHashCode">
            <summary>Gets a hashcode for this notification. Delegates to <see cref="P:Igtampe.Neco.Common.Notification.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Notification.ToString">
            <summary>Creates a string representation of this Notification</summary>
            <returns>{Id} : [{Time}] {Text}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.BankAccountActionRequest">
            <summary>Holds a request to commit an action to a Neco Bank Account (IE Close, Logs)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.BankAccountActionRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.BankAccountActionRequest.BankAccountID">
            <summary>ID of the bank account to close</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.BankAccountOpenRequest">
            <summary>Holds a request to Open a Neco bank account</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.BankAccountOpenRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.BankAccountOpenRequest.BankAccountTypeID">
            <summary>ID of the bank account type to open</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.CertificationRequest">
            <summary>A Neco request to certify an Item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.CertificationRequest.SessionID">
            <summary>SessionID of the certification origin</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.CertificationRequest.Text">
            <summary>Text to certify</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.CheckbookSendItemRequest">
            <summary>Holds a Neco Request to create and send a new checkbook item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.CheckbookSendItemRequest.SessionID">
            <summary>ID of the session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.CheckbookSendItemRequest.TransactRequest">
            <summary>Request for the internal transaction in this checkbook item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.CheckbookSendItemRequest.ItemType">
            <summary>Type of item being requested</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.CheckbookSendItemRequest.Variant">
            <summary>Graphical variant of item being sent</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.CheckbookSendItemRequest.Comment">
            <summary>Comment of the item being sent</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.INecoRequest">
            <summary>Defines the absolute basic needs of a Neco Request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.INecoRequest.SessionID">
            <summary>ID of the session making this request</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.NewUserRequest">
            <summary>Request to the Neco server to create a new user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.NewUserRequest.Name">
            <summary>Name of this new user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.NewUserRequest.Pin">
            <summary>Pin for this new user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.NewUserRequest.Type">
            <summary>Type of user to create</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.PasswordChangeRequest">
            <summary>Request to change a password</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.PasswordChangeRequest.SessionID">
            <summary>ID of the session this PCR comes from</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.PasswordChangeRequest.CurrentPassword">
            <summary>User's current password</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.PasswordChangeRequest.NewPassword">
            <summary>New Password</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.Requests.PasswordChangeRequest.Equals(System.Object)">
            <summary>Compares this PasswordChangeRequest to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a Password Change Request, and all fields match</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Requests.PasswordChangeRequest.GetHashCode">
            <summary>Gets a hash code for this TaxBracket. Delegates to <see cref="P:Igtampe.Neco.Common.Requests.PasswordChangeRequest.SessionID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Requests.PasswordChangeRequest.ToString">
            <summary>Creates a string representation of this TaxBracket</summary>
            <returns>"ID} : {Name}, From {Start} to {End} at {Rate}%</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.Requests.TransactionRequest">
            <summary>Holds a Neco Transaction Request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.TransactionRequest.SessionID">
            <summary>Session that's executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.TransactionRequest.Name">
            <summary>Name of this transaction</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.TransactionRequest.FromBankID">
            <summary>Bank this transaction will originate from</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.TransactionRequest.ToBankID">
            <summary>Bank this transaction will destinate to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Requests.TransactionRequest.Amount">
            <summary>Amount to transfer in this transaction</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.TransactionState">
            <summary>Holds all states of a Transaction</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.TransactionState.PENDING">
            <summary>Transaction has not yet been completed</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.TransactionState.COMPLETED">
            <summary>Transaction was completed successfully</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.TransactionState.FAILED">
            <summary>Transaction was attempted, and failed</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.Transaction">
            <summary>Holds information for a NECO Transaction</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Transaction.ID">
            <summary>ID of this transaction</summary>        
        </member>
        <member name="P:Igtampe.Neco.Common.Transaction.Amount">
            <summary>Amount  transfered by this transaction</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Transaction.Time">
            <summary>Time at which this transaction took place</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Transaction.Name">
            <summary>Name of ths transaction</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Transaction.FromAccount">
            <summary>Account from which the amount in this transaction will be deducted</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Transaction.ToAccount">
            <summary>Account from which the amount in this transaction will be added to</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.Transaction.State">
            <summary>Whether or not this transaciton has been executed</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.Transaction.Equals(System.Object)">
            <summary>Compares this Transaction to another object</summary>
            <param name="obj"></param>
            <returns>return true if the object is a transaction, and if its <see cref="P:Igtampe.Neco.Common.Transaction.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Transaction.GetHashCode">
            <summary>Gets a hashcode for this transaction. Delegates to <see cref="P:Igtampe.Neco.Common.Transaction.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.Transaction.ToString">
            <summary>Creates a string representation of this transaction</summary>
            <returns>{Id} : {Amount} from {FromUser?.Id} to {ToUser?.Id}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.UMSAT.Asset">
            <summary>UMSAT Item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.ID">
            <summary>ID of this item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.Name">
            <summary>Name of this Item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.Description">
            <summary>Description of this item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.SpecificLocaiton">
            <summary>Specific location of this item (Like a neighborhood or county name)</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.UMSAT.Asset.Location">
            <summary>Full location of this item</summary>
            <returns></returns>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.Owner">
            <summary>Owner of this item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.Complete">
            <summary>Whether or not this item is complete</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.IncomeItem">
            <summary>IncomeItem related to this asset</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.Plot">
            <summary>Plot of land this item sits on</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.Image">
            <summary>Image of this item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.CreationDate">
            <summary>Date of record creation</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Asset.UpdateDate">
            <summary>Date of last update</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.UMSAT.Asset.Equals(System.Object)">
            <summary>Compares this Asset to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is an Asset and the <see cref="P:Igtampe.Neco.Common.UMSAT.Asset.ID"/> matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.UMSAT.Asset.GetHashCode">
            <summary>Gets a hash code for this Asset. Delegates to <see cref="P:Igtampe.Neco.Common.UMSAT.Asset.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.UMSAT.Asset.ToString">
            <summary>Creates a string representation of this Asset</summary>
            <returns>{ID} : {Name}</returns>
        </member>
        <member name="T:Igtampe.Neco.Common.UMSAT.Requests.AssetDeleteRequest">
            <summary>Request to delete an UMSAT item</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetDeleteRequest.SessionID">
            <summary>ID of the Session executing request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetDeleteRequest.AssetID">
            <summary>ID of the Asset thats</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest">
            <summary>Request to modify or create an asset</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.SessionID">
            <summary>ID of the Session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.AssetID">
            <summary>ID of the asset to modify </summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.Name">
            <summary>Asset name</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.Description">
            <summary>Asset description</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.SpecificLocation">
            <summary>Asset specific location</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.Complete">
            <summary>Asset Completion State</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.Image">
            <summary>Asset image</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.IncomeItemID">
            <summary>ID of the tied EzTax IncomeItem</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetModRequest.PlotID">
            <summary>ID of the tied LandView Plot</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.UMSAT.Requests.AssetTransferRequest">
            <summary>Request to transfer asset ownership</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetTransferRequest.SessionID">
            <summary>ID of the Session executing this request</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetTransferRequest.AssetID">
            <summary>ID of the asset to transfer ownership</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UMSAT.Requests.AssetTransferRequest.NewOwnerID">
            <summary>User ID which will be the new owner of this asset after the transfer</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.User">
            <summary>User in the NECO system</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.User.ID">
            <summary>UMSWEB ID of this user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.User.Name">
            <summary>Name of this user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.User.Type">
            <summary><see cref="T:Igtampe.Neco.Common.UserType"/> of this user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.User.Accounts">
            <summary>Accoutns this user owns</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.User.Notifications">
            <summary>Notifications this user has</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.User.Equals(System.Object)">
            <summary>Compares this User to another object</summary>
            <param name="obj"></param>
            <returns>True if and only if the other object is a user and their ID matches</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.User.GetHashCode">
            <summary>Gets a hashcode for this user. Delegates to <see cref="P:Igtampe.Neco.Common.User.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.User.ToString">
            <summary>returns a colon seperated list of <see cref="P:Igtampe.Neco.Common.User.ID"/> and <see cref="P:Igtampe.Neco.Common.User.Name"/></summary>
            <returns></returns>
        </member>
        <member name="T:Igtampe.Neco.Common.UserAuth">
            <summary>User used for Authentication</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UserAuth.ID">
            <summary>UMSWEB ID of this user</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UserAuth.Pin">
            <summary>Pin of this user</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.UserAuth.CheckPin(System.String)">
            <summary>Checks the provided pin against this user's pin</summary>
            <param name="Pin"></param>
            <returns>Returns true if the provided pin matches this user's pin</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.UserAuth.Equals(System.Object)">
            <summary>Checks if this and another <see cref="T:Igtampe.Neco.Common.UserAuth"/> object are the same</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.UserAuth.GetHashCode">
            <summary>Gets a Hashcode for this UserAuth (Delegated to <see cref="P:Igtampe.Neco.Common.UserAuth.ID"/>)</summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.UserAuth.ToString">
            <summary>Returns ID for this user auth</summary>
            <returns></returns>
        </member>
        <member name="T:Igtampe.Neco.Common.TaxationType">
            <summary>Determines the taxability of transactions to or from accounts held by users of this user type</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.TaxationType.Taxable">
            <summary>Transactions are taxable to and from this account<br/>
            Users of this type should be taxed by EzTax<br/>
            This taxation type should be used by general users</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.TaxationType.NonTaxableDestination">
            <summary>Transactions are NOT taxable if this account is the destination<br/><br/>
            IE: Money sent to this account is NOT COUNTED TOWARDS INCOME of the sender.<br/><br/>
            Users of this type should NOT be taxed by EzTax<br/>
            This taxation type should be used by Charities</summary>
        </member>
        <member name="F:Igtampe.Neco.Common.TaxationType.NontaxableOrigin">
            <summary>Transactions from this account are NOT taxable<br/>
            IE: Money received from this account is not counted towards income of the recipient<br/>
            Users of this type should NOT be taxed by EzTax<br/>
            This taxation type should be used by Governments</summary>
        </member>
        <member name="T:Igtampe.Neco.Common.UserType">
            <summary>Type of user in NECO</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UserType.ID">
            <summary>ID of this User Type</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UserType.Name">
            <summary>Name of this User Type (IE Standard, Corporate, Government)</summary>
        </member>
        <member name="P:Igtampe.Neco.Common.UserType.Taxation">
            <summary>Identifies how to handle taxes to and from this account</summary>
        </member>
        <member name="M:Igtampe.Neco.Common.UserType.Equals(System.Object)">
            <summary>Check if an object is equal to this user type</summary>
            <param name="obj"></param>
            <returns>True if and only if the object is a UserType, and if its ID matches with this one's</returns>
        </member>
        <member name="M:Igtampe.Neco.Common.UserType.GetHashCode">
            <summary>Gets hashcode for this usertype. Delegates to <see cref="P:Igtampe.Neco.Common.UserType.ID"/></summary>
            <returns></returns>
        </member>
        <member name="M:Igtampe.Neco.Common.UserType.ToString">
            <summary>Returns the name of this user type</summary>
            <returns></returns>
        </member>
    </members>
</doc>
